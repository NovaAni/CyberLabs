Lab: Path Traversal

1. Objective:  This lab contains a path traversal vulnerability in the display of product images.
            To solve the lab, retrieve the contents of the /etc/passwd file. 
2. Reconnaissance: We use BurpSuite to moderate the traffic generated from opening the lab link either using the built-in chromium browser or via the foxy proxy extension 
                   We observe that we obtain a list of .jpg requests coming from the website 
3. Exploitation: We then choose one of the .jpg files and sent the to the Repeater via. Proxy tab. 
                 After we have sent it to the Repeater tab we change the filename to: ../../../etc/passwd
                 We click send 
4. Observation: We notice that we have completed the first lab as we successfully acquired the contents of the /etc/passwd file





Lab: Unprotected admin functionality

1. Objective:  This lab has an unprotected admin panel.
               Solve the lab by deleting the user carlos. 
2. Recon: We will be using the website URL for this lab
3. Exploitation: We learnt that enterring /robots.txt after the given URL will give us access to administrative functions, so we enter /robots.txta after the lab's URL 
                 This leads us to the client side source code where we find a bypass to disallow the admin controls using a different path i.e. /administrator-panel
                 This is replaced with /robots.txt  giving us the admin controls, where we remove the user, carlos.
4. Observation: We used the /robots.txt to lead us to an admin path which we have used to successfully removed carlos 





Lab: Unprotected admin functionality with unpredictable URL

1. Objective:  This lab has an unprotected admin panel. It's located at an unpredictable location, but the location is disclosed somewhere in the application.
               Solve the lab by accessing the admin panel, and using it to delete the user carlos.
2. Recon: Here we will be using the client side source code for our exploit 
3. Exploitation: After opening the source code we find a region of code thats enclosed by the curly braces i.e { }
                 Under "adminPanelTag.setAttribute('href', '/admin-82ca1f');" we see a href (redirect) link with the path /admin-82ca1f
                 Add this path to the lab URL which redirects us to the admin panel 
                 We delete carlos
4. Observation: We used admin permitions using source code and have successfully removed carlos 





Lab: User role controlled by request parameter

1. Objective:  This lab has an admin panel at /admin, which identifies administrators using a forgeable cookie.
               Solve the lab by accessing the admin panel and using it to delete the user carlos.
               You can log in to your own account using the following credentials: wiener:peter
2. Recon: BurpSuite should be used here as we can see that the lab requires us to login to our account. 
          (This usually implies that we should manipulate our enterred data to gain admin controls to delete carlos.)
3. Exploitation: First we turn on the interpreter via Proxy tab 
                 We go to "My Account" to login to our account
                 We enter our given credentials username: wiener & password: peter
                 Our intercept history would likely be displaying a request with the POST method that indicates a user enterring their data onto the client side system
                 This is the same data that needs to be manipulated to obtain the admin controls
                 Search up 'admin' in the search bar in the Intercept region and change Admin=false to Admin=true wherever you find the Admin option
                 Click Forward on the request until you see no further requests recieved 
                 After all requests you see an "Admin panel" on the top right of the website, click on it.
                 Change Admin=true for all requests here too 
                 Delete carlos (and yes change Admin=true here too)
4. Observation: We have successfuly controlled the admin role via request parameter and removed carlos





Lab: User ID controlled by request parameter, with unpredictable user IDs 

1. Objective:  This lab has a horizontal privilege escalation vulnerability on the user account page, but identifies users with GUIDs.
               To solve the lab, find the GUID for carlos, then submit his API key as the solution.
               You can log in to your own account using the following credentials: wiener:peter 
2. Recon: We use BurpSuite to change our user id with carlos' and retrieve his API key
3. Exploitation: We find a blog written by carlos and open it
                 We can see carlos' user id at the top of the URL saying "userId=...." 
                 We copy carlos' user id 
                 We turn on BurpSuite and login to our account 
                 We observe on the second request that our user id gets mentioned but here we delete that and paste carlos' user id 
                 Then forward the request
                 We get carlos' API key which we submit to complete the level (Submit button is displayed at the top)
4. Observation: We were able to access carlos' API key just by inputting his user id which was vulnerably displayed in the URL with our login information





Lab: User ID controlled by request parameter with password disclosure

1. Objective:  This lab has user account page that contains the current user's existing password, prefilled in a masked input.
               To solve the lab, retrieve the administrator's password, then use it to delete the user carlos.
               You can log in to your own account using the following credentials: wiener:peter 
2. Recon: BurpSuite 
3. Exploitation: We login to our account as provided 
                 We see that in the change-password section in the URL we observe our username i.e. wiener being displayed there
                 Change that to "administrator"
                 Turn on BurpSuite and enter a placeholder email (dumb email) 
                 And upload the new password as it is 
                 In BurpSuite we type "password" in the search column and retrieve the password for administrator
                 We can turn off BurpSuite now
                 We login using administrator account and head to Admin panel to delete carlos 
4. Observation: We deleted carlos' data using administrator access via URL and BurpSuite to attain the administrator's password after we manually update it such that only we have it





Lab: 
